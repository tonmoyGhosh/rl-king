/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/demo1/js/custom/dom-to-image.js":
/*!**********************************************************!*\
  !*** ./resources/assets/demo1/js/custom/dom-to-image.js ***!
  \**********************************************************/
/***/ (function(module) {

eval("/*! dom-to-image 10-06-2017 */\n!function (a) {\n  \"use strict\";\n\n  function b(a, b) {\n    function c(a) {\n      return b.bgcolor && (a.style.backgroundColor = b.bgcolor), b.width && (a.style.width = b.width + \"px\"), b.height && (a.style.height = b.height + \"px\"), b.style && Object.keys(b.style).forEach(function (c) {\n        a.style[c] = b.style[c];\n      }), a;\n    }\n\n    return b = b || {}, g(b), Promise.resolve(a).then(function (a) {\n      return i(a, b.filter, !0);\n    }).then(j).then(k).then(c).then(function (c) {\n      return l(c, b.width || q.width(a), b.height || q.height(a));\n    });\n  }\n\n  function c(a, b) {\n    return h(a, b || {}).then(function (b) {\n      return b.getContext(\"2d\").getImageData(0, 0, q.width(a), q.height(a)).data;\n    });\n  }\n\n  function d(a, b) {\n    return h(a, b || {}).then(function (a) {\n      return a.toDataURL();\n    });\n  }\n\n  function e(a, b) {\n    return b = b || {}, h(a, b).then(function (a) {\n      return a.toDataURL(\"image/jpeg\", b.quality || 1);\n    });\n  }\n\n  function f(a, b) {\n    return h(a, b || {}).then(q.canvasToBlob);\n  }\n\n  function g(a) {\n    \"undefined\" == typeof a.imagePlaceholder ? v.impl.options.imagePlaceholder = u.imagePlaceholder : v.impl.options.imagePlaceholder = a.imagePlaceholder, \"undefined\" == typeof a.cacheBust ? v.impl.options.cacheBust = u.cacheBust : v.impl.options.cacheBust = a.cacheBust;\n  }\n\n  function h(a, c) {\n    function d(a) {\n      var b = document.createElement(\"canvas\");\n\n      if (b.width = c.width || q.width(a), b.height = c.height || q.height(a), c.bgcolor) {\n        var d = b.getContext(\"2d\");\n        d.fillStyle = c.bgcolor, d.fillRect(0, 0, b.width, b.height);\n      }\n\n      return b;\n    }\n\n    return b(a, c).then(q.makeImage).then(q.delay(100)).then(function (b) {\n      var c = d(a);\n      return c.getContext(\"2d\").drawImage(b, 0, 0), c;\n    });\n  }\n\n  function i(a, b, c) {\n    function d(a) {\n      return a instanceof HTMLCanvasElement ? q.makeImage(a.toDataURL()) : a.cloneNode(!1);\n    }\n\n    function e(a, b, c) {\n      function d(a, b, c) {\n        var d = Promise.resolve();\n        return b.forEach(function (b) {\n          d = d.then(function () {\n            return i(b, c);\n          }).then(function (b) {\n            b && a.appendChild(b);\n          });\n        }), d;\n      }\n\n      var e = a.childNodes;\n      return 0 === e.length ? Promise.resolve(b) : d(b, q.asArray(e), c).then(function () {\n        return b;\n      });\n    }\n\n    function f(a, b) {\n      function c() {\n        function c(a, b) {\n          function c(a, b) {\n            q.asArray(a).forEach(function (c) {\n              b.setProperty(c, a.getPropertyValue(c), a.getPropertyPriority(c));\n            });\n          }\n\n          a.cssText ? b.cssText = a.cssText : c(a, b);\n        }\n\n        c(window.getComputedStyle(a), b.style);\n      }\n\n      function d() {\n        function c(c) {\n          function d(a, b, c) {\n            function d(a) {\n              var b = a.getPropertyValue(\"content\");\n              return a.cssText + \" content: \" + b + \";\";\n            }\n\n            function e(a) {\n              function b(b) {\n                return b + \": \" + a.getPropertyValue(b) + (a.getPropertyPriority(b) ? \" !important\" : \"\");\n              }\n\n              return q.asArray(a).map(b).join(\"; \") + \";\";\n            }\n\n            var f = \".\" + a + \":\" + b,\n                g = c.cssText ? d(c) : e(c);\n            return document.createTextNode(f + \"{\" + g + \"}\");\n          }\n\n          var e = window.getComputedStyle(a, c),\n              f = e.getPropertyValue(\"content\");\n\n          if (\"\" !== f && \"none\" !== f) {\n            var g = q.uid();\n            b.className = b.className + \" \" + g;\n            var h = document.createElement(\"style\");\n            h.appendChild(d(g, c, e)), b.appendChild(h);\n          }\n        }\n\n        [\":before\", \":after\"].forEach(function (a) {\n          c(a);\n        });\n      }\n\n      function e() {\n        a instanceof HTMLTextAreaElement && (b.innerHTML = a.value), a instanceof HTMLInputElement && b.setAttribute(\"value\", a.value);\n      }\n\n      function f() {\n        b instanceof SVGElement && (b.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\"), b instanceof SVGRectElement && [\"width\", \"height\"].forEach(function (a) {\n          var c = b.getAttribute(a);\n          c && b.style.setProperty(a, c);\n        }));\n      }\n\n      return b instanceof Element ? Promise.resolve().then(c).then(d).then(e).then(f).then(function () {\n        return b;\n      }) : b;\n    }\n\n    return c || !b || b(a) ? Promise.resolve(a).then(d).then(function (c) {\n      return e(a, c, b);\n    }).then(function (b) {\n      return f(a, b);\n    }) : Promise.resolve();\n  }\n\n  function j(a) {\n    return s.resolveAll().then(function (b) {\n      var c = document.createElement(\"style\");\n      return a.appendChild(c), c.appendChild(document.createTextNode(b)), a;\n    });\n  }\n\n  function k(a) {\n    return t.inlineAll(a).then(function () {\n      return a;\n    });\n  }\n\n  function l(a, b, c) {\n    return Promise.resolve(a).then(function (a) {\n      return a.setAttribute(\"xmlns\", \"http://www.w3.org/1999/xhtml\"), new XMLSerializer().serializeToString(a);\n    }).then(q.escapeXhtml).then(function (a) {\n      return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + a + \"</foreignObject>\";\n    }).then(function (a) {\n      return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + b + '\" height=\"' + c + '\">' + a + \"</svg>\";\n    }).then(function (a) {\n      return \"data:image/svg+xml;charset=utf-8,\" + a;\n    });\n  }\n\n  function m() {\n    function a() {\n      var a = \"application/font-woff\",\n          b = \"image/jpeg\";\n      return {\n        woff: a,\n        woff2: a,\n        ttf: \"application/font-truetype\",\n        eot: \"application/vnd.ms-fontobject\",\n        png: \"image/png\",\n        jpg: b,\n        jpeg: b,\n        gif: \"image/gif\",\n        tiff: \"image/tiff\",\n        svg: \"image/svg+xml\"\n      };\n    }\n\n    function b(a) {\n      var b = /\\.([^\\.\\/]*?)$/g.exec(a);\n      return b ? b[1] : \"\";\n    }\n\n    function c(c) {\n      var d = b(c).toLowerCase();\n      return a()[d] || \"\";\n    }\n\n    function d(a) {\n      return a.search(/^(data:)/) !== -1;\n    }\n\n    function e(a) {\n      return new Promise(function (b) {\n        for (var c = window.atob(a.toDataURL().split(\",\")[1]), d = c.length, e = new Uint8Array(d), f = 0; f < d; f++) {\n          e[f] = c.charCodeAt(f);\n        }\n\n        b(new Blob([e], {\n          type: \"image/png\"\n        }));\n      });\n    }\n\n    function f(a) {\n      return a.toBlob ? new Promise(function (b) {\n        a.toBlob(b);\n      }) : e(a);\n    }\n\n    function g(a, b) {\n      var c = document.implementation.createHTMLDocument(),\n          d = c.createElement(\"base\");\n      c.head.appendChild(d);\n      var e = c.createElement(\"a\");\n      return c.body.appendChild(e), d.href = b, e.href = a, e.href;\n    }\n\n    function h() {\n      var a = 0;\n      return function () {\n        function b() {\n          return (\"0000\" + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n        }\n\n        return \"u\" + b() + a++;\n      };\n    }\n\n    function i(a) {\n      return new Promise(function (b, c) {\n        var d = new Image();\n        d.onload = function () {\n          b(d);\n        }, d.onerror = c, d.src = a;\n      });\n    }\n\n    function j(a) {\n      var b = 3e4;\n      return v.impl.options.cacheBust && (a += (/\\?/.test(a) ? \"&\" : \"?\") + new Date().getTime()), new Promise(function (c) {\n        function d() {\n          if (4 === g.readyState) {\n            if (200 !== g.status) return void (h ? c(h) : f(\"cannot fetch resource: \" + a + \", status: \" + g.status));\n            var b = new FileReader();\n            b.onloadend = function () {\n              var a = b.result.split(/,/)[1];\n              c(a);\n            }, b.readAsDataURL(g.response);\n          }\n        }\n\n        function e() {\n          h ? c(h) : f(\"timeout of \" + b + \"ms occured while fetching resource: \" + a);\n        }\n\n        function f(a) {\n          console.error(a), c(\"\");\n        }\n\n        var g = new XMLHttpRequest();\n        g.onreadystatechange = d, g.ontimeout = e, g.responseType = \"blob\", g.timeout = b, g.open(\"GET\", a, !0), g.send();\n        var h;\n\n        if (v.impl.options.imagePlaceholder) {\n          var i = v.impl.options.imagePlaceholder.split(/,/);\n          i && i[1] && (h = i[1]);\n        }\n      });\n    }\n\n    function k(a, b) {\n      return \"data:\" + b + \";base64,\" + a;\n    }\n\n    function l(a) {\n      return a.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n    }\n\n    function m(a) {\n      return function (b) {\n        return new Promise(function (c) {\n          setTimeout(function () {\n            c(b);\n          }, a);\n        });\n      };\n    }\n\n    function n(a) {\n      for (var b = [], c = a.length, d = 0; d < c; d++) {\n        b.push(a[d]);\n      }\n\n      return b;\n    }\n\n    function o(a) {\n      return a.replace(/#/g, \"%23\").replace(/\\n/g, \"%0A\");\n    }\n\n    function p(a) {\n      var b = r(a, \"border-left-width\"),\n          c = r(a, \"border-right-width\");\n      return a.scrollWidth + b + c;\n    }\n\n    function q(a) {\n      var b = r(a, \"border-top-width\"),\n          c = r(a, \"border-bottom-width\");\n      return a.scrollHeight + b + c;\n    }\n\n    function r(a, b) {\n      var c = window.getComputedStyle(a).getPropertyValue(b);\n      return parseFloat(c.replace(\"px\", \"\"));\n    }\n\n    return {\n      escape: l,\n      parseExtension: b,\n      mimeType: c,\n      dataAsUrl: k,\n      isDataUrl: d,\n      canvasToBlob: f,\n      resolveUrl: g,\n      getAndEncode: j,\n      uid: h(),\n      delay: m,\n      asArray: n,\n      escapeXhtml: o,\n      makeImage: i,\n      width: p,\n      height: q\n    };\n  }\n\n  function n() {\n    function a(a) {\n      return a.search(e) !== -1;\n    }\n\n    function b(a) {\n      for (var b, c = []; null !== (b = e.exec(a));) {\n        c.push(b[1]);\n      }\n\n      return c.filter(function (a) {\n        return !q.isDataUrl(a);\n      });\n    }\n\n    function c(a, b, c, d) {\n      function e(a) {\n        return new RegExp(\"(url\\\\(['\\\"]?)(\" + q.escape(a) + \")(['\\\"]?\\\\))\", \"g\");\n      }\n\n      return Promise.resolve(b).then(function (a) {\n        return c ? q.resolveUrl(a, c) : a;\n      }).then(d || q.getAndEncode).then(function (a) {\n        return q.dataAsUrl(a, q.mimeType(b));\n      }).then(function (c) {\n        return a.replace(e(b), \"$1\" + c + \"$3\");\n      });\n    }\n\n    function d(d, e, f) {\n      function g() {\n        return !a(d);\n      }\n\n      return g() ? Promise.resolve(d) : Promise.resolve(d).then(b).then(function (a) {\n        var b = Promise.resolve(d);\n        return a.forEach(function (a) {\n          b = b.then(function (b) {\n            return c(b, a, e, f);\n          });\n        }), b;\n      });\n    }\n\n    var e = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n    return {\n      inlineAll: d,\n      shouldProcess: a,\n      impl: {\n        readUrls: b,\n        inline: c\n      }\n    };\n  }\n\n  function o() {\n    function a() {\n      return b(document).then(function (a) {\n        return Promise.all(a.map(function (a) {\n          return a.resolve();\n        }));\n      }).then(function (a) {\n        return a.join(\"\\n\");\n      });\n    }\n\n    function b() {\n      function a(a) {\n        return a.filter(function (a) {\n          return a.type === CSSRule.FONT_FACE_RULE;\n        }).filter(function (a) {\n          return r.shouldProcess(a.style.getPropertyValue(\"src\"));\n        });\n      }\n\n      function b(a) {\n        var b = [];\n        return a.forEach(function (a) {\n          try {\n            q.asArray(a.cssRules || []).forEach(b.push.bind(b));\n          } catch (c) {\n            console.log(\"Error while reading CSS rules from \" + a.href, c.toString());\n          }\n        }), b;\n      }\n\n      function c(a) {\n        return {\n          resolve: function resolve() {\n            var b = (a.parentStyleSheet || {}).href;\n            return r.inlineAll(a.cssText, b);\n          },\n          src: function src() {\n            return a.style.getPropertyValue(\"src\");\n          }\n        };\n      }\n\n      return Promise.resolve(q.asArray(document.styleSheets)).then(b).then(a).then(function (a) {\n        return a.map(c);\n      });\n    }\n\n    return {\n      resolveAll: a,\n      impl: {\n        readAll: b\n      }\n    };\n  }\n\n  function p() {\n    function a(a) {\n      function b(b) {\n        return q.isDataUrl(a.src) ? Promise.resolve() : Promise.resolve(a.src).then(b || q.getAndEncode).then(function (b) {\n          return q.dataAsUrl(b, q.mimeType(a.src));\n        }).then(function (b) {\n          return new Promise(function (c, d) {\n            a.onload = c, a.onerror = d, a.src = b;\n          });\n        });\n      }\n\n      return {\n        inline: b\n      };\n    }\n\n    function b(c) {\n      function d(a) {\n        var b = a.style.getPropertyValue(\"background\");\n        return b ? r.inlineAll(b).then(function (b) {\n          a.style.setProperty(\"background\", b, a.style.getPropertyPriority(\"background\"));\n        }).then(function () {\n          return a;\n        }) : Promise.resolve(a);\n      }\n\n      return c instanceof Element ? d(c).then(function () {\n        return c instanceof HTMLImageElement ? a(c).inline() : Promise.all(q.asArray(c.childNodes).map(function (a) {\n          return b(a);\n        }));\n      }) : Promise.resolve(c);\n    }\n\n    return {\n      inlineAll: b,\n      impl: {\n        newImage: a\n      }\n    };\n  }\n\n  var q = m(),\n      r = n(),\n      s = o(),\n      t = p(),\n      u = {\n    imagePlaceholder: void 0,\n    cacheBust: !1\n  },\n      v = {\n    toSvg: b,\n    toPng: d,\n    toJpeg: e,\n    toBlob: f,\n    toPixelData: c,\n    impl: {\n      fontFaces: s,\n      images: t,\n      util: q,\n      inliner: r,\n      options: {}\n    }\n  };\n   true ? module.exports = v : 0;\n}(this);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/demo1/js/custom/dom-to-image.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/assets/demo1/js/custom/dom-to-image.js");
/******/ 	
/******/ })()
;